services:
  caddy:
    image: ${CADDY_IMAGE_NAME:-caddy}:${CADDY_IMAGE_TAG:-latest}
    environment:
      CADDY_PORT:
      CONTAINER_NAME:
      PORT:
    networks:
      tts-api-net:
      traefik-net:
    configs:
      - source: caddyfile-config
        target: /etc/Caddyfile
    healthcheck:
      test: wget --spider -q http://localhost:${CADDY_PORT}/health
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-15s}
      retries: ${HEALTHCHECK_RETRIES:-10}
      start_period: ${HEALTHCHECK_START_PERIOD:-30s}
    deploy:
      mode: replicated
      replicas: ${REPLICAS:-1}
      restart_policy:
        delay: ${RESTART_DELAY:-3s}
      update_config:
        delay: ${UPDATE_DELAY:-30s}
      labels:
        traefik.enable: ${TRAEFIK_ENABLE:-true}
        traefik.http.routers.tts-api.entrypoints: ${TRAEFIK_ENTRYPOINT:-https}
        traefik.http.routers.tts-api.rule: Host(`${TRAEFIK_SUBDOMAIN:-tts}.${TRAEFIK_DOMAIN}`)
        traefik.http.services.tts-api.loadbalancer.server.port: ${CADDY_PORT}
      resources:
        limits:
          cpus: '${RESOURCES_LIMITS_CPUS:-0.1}'
          memory: ${RESOURCES_LIMITS_MEMORY:-32M}
        reservations:
          cpus: '${RESOURCES_RESERVATIONS_CPUS:-0.001}'
          memory: ${RESOURCES_RESERVATIONS_MEMORY:-8M}

networks:
  tts-api-net:
    name: ${TTS_API_NET_NAME}
    driver: ${TTS_API_NET_DRIVER}
    attachable: true

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    driver: ${TRAEFIK_NET_DRIVER:-overlay}
    external: true

configs:
  caddyfile-config:
    name: ${CADDYFILE_CONFIG_NAME:-tts-api-caddyfile}
    file: ./config/Caddyfile
